version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - ./qdrant_storage:/qdrant/storage

  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: crawler_meta
    volumes:
      - ./postgres_data:/var/lib/postgresql/data

  crawler:
    build:
      context: ./go-backend
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - postgres
    environment:
      KAFKA_BROKER: kafka:9092
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: crawler_meta
    volumes:
      - ./go-backend:/app
    command: ["./bin/crawler"]

  content-processor:
    build:
      context: ./go-backend
      dockerfile: Dockerfile
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: kafka:9092
    volumes:
      - ./go-backend:/app
    command: ["./bin/content-processor"]

  api:
    build:
      context: ./go-backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: crawler_meta
    volumes:
      - ./go-backend:/app
    command: ["./bin/api"]

  dream-processor:
    build:
      context: ./py-ml-service
    depends_on:
      - kafka
      - qdrant
    environment:
      KAFKA_BROKER: kafka:9092
      KAFKA_DREAM_TOPIC: dream.seeds
      MODEL_PATH: /models/tinyllama-1.1b-chat-v1.0.Q4_K_M.gguf
      QDRANT_HOST: qdrant
      QDRANT_PORT: 6333
    volumes:
      - ./models:/models:ro
    ports:
      - "8000:8000"

  ml-api:
    build:
      context: ./py-ml-service
    ports:
      - "8001:8000"
    depends_on:
      - qdrant
    environment:
      QDRANT_HOST: qdrant
      QDRANT_PORT: 6333
      DISABLE_LLM: "1"
      DISABLE_EMBEDDINGS: "1"
    volumes:
      - ./py-ml-service:/app
    command: ["python", "api.py"]